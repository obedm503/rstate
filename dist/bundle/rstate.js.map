{"version":3,"file":"rstate.js","sources":["../../node_modules/rxjs/util/tryCatch.js","../../node_modules/rxjs/Subscription.js","../../node_modules/dot-prop-immutable/index.js","../../node_modules/rxjs/util/root.js","../../node_modules/rxjs/util/isFunction.js","../../node_modules/rxjs/util/isArray.js","../../node_modules/rxjs/util/isObject.js","../../node_modules/rxjs/util/errorObject.js","../../node_modules/rxjs/util/UnsubscriptionError.js","../../node_modules/rxjs/Observer.js","../../node_modules/rxjs/symbol/rxSubscriber.js","../../node_modules/rxjs/Subscriber.js","../../node_modules/rxjs/util/toSubscriber.js","../../node_modules/rxjs/symbol/observable.js","../../node_modules/rxjs/Observable.js","../../node_modules/rxjs/util/ObjectUnsubscribedError.js","../../node_modules/rxjs/SubjectSubscription.js","../../node_modules/rxjs/Subject.js","../../node_modules/rxjs/BehaviorSubject.js","../esm/util.js","../esm/combineHandlers.js","../esm/rstate.js"],"sourcesContent":["\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","'use strict';\n\n/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param val The value to set.\n */\nmodule.exports.set = function(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tvar setPropImmutableRec = function(obj, prop, value, i) {\n\t\tvar clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n};\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n */\nmodule.exports.get = function(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (typeof obj !== 'object') {\n\t\t\treturn undefined;\n\t\t}\n\t\tvar head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\treturn obj;\n};\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nmodule.exports.delete = function(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tvar deletePropImmutableRec = function(obj, prop, i) {\n\t\tvar clone, head = prop[i];\n\n\t\tif (typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined ||\n\t\t\tArray.isArray(obj) && obj[getArrayIndex(head, obj)] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n};\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nmodule.exports.toggle = function(obj, prop) {\n\tvar curVal = this.get(obj, prop);\n\treturn this.set(obj, prop, !Boolean(curVal));\n};\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nmodule.exports.merge = function(obj, prop, val) {\n\tvar curVal = this.get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)){\n\t\t\treturn this.set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null){\n\t\t\treturn this.set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tvar merged = Object.assign({}, curVal, val);\n\t\t\treturn this.set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined'){\n\t\treturn this.set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n};\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = obj.length - 1;\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error('Array index \\'' + head + '\\' has to be an integer');\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.replace(/\\\\\\./g, '@').replace(/\\./g, '*').replace(/@/g, '.').split('*');\n}\n","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observables internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remote this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2,5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","export var isObject = function (item) { return (item && typeof item === 'object' && !Array.isArray(item)); };\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { isObject } from \"./util\";\n/**\n * based on https://coderwall.com/p/w22s0w/recursive-merge-flatten-objects-in-plain-old-vanilla-javascript\n *\n * {\n *   INCREMENT_MESSAGE_COUNT(){},\n *   users: {\n *     ADD_USER(){}\n *   }\n * }\n * =>\n * {\n *   INCREMENT_MESSAGE_COUNT(){},\n *   ADD_USER@users(){}\n * }\n *\n * @export\n * @param {object} obj\n * @returns {object}\n */\nexport function combineHandlers(handlers) {\n    if (!isObject(handlers)) {\n        throw new Error('combineHandlers expected action handlers to be object literal');\n    }\n    function recursive(obj, name, stem) {\n        var out = {};\n        var stateStem = stem ? stem + \".\" + name : name;\n        Object.keys(obj).forEach(function (key) {\n            var value = obj[key];\n            var prop;\n            if (isObject(value)) {\n                prop = recursive(value, key, stateStem);\n            }\n            else {\n                var handlerStem = stateStem ? key + \"@\" + stateStem : key;\n                prop = (_a = {},\n                    _a[handlerStem] = value,\n                    _a);\n            }\n            out = __assign({}, out, prop);\n            var _a;\n        });\n        return out;\n    }\n    return recursive(handlers);\n}\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { set, get } from 'dot-prop-immutable';\nexport { combineHandlers } from './combineHandlers';\nvar Store = (function () {\n    function Store(handlers, initialState) {\n        this.handlers = {};\n        if (typeof handlers === 'undefined') {\n            throw new Error('Rstate: no action handlers provided');\n        }\n        this.handlers = handlers;\n        this.bhs$ = new BehaviorSubject(initialState);\n        this.state = this.bhs$.asObservable();\n        // redux-like api\n        this.subscribe = this.state.subscribe.bind(this.state);\n    }\n    Store.prototype.dispatch = function (action) {\n        var _this = this;\n        if (typeof action === 'undefined') {\n            throw new Error('No Action Given');\n        }\n        var handlerKeys = Object.keys(this.handlers);\n        var handlers = handlerKeys\n            .filter(function (key) { return key === action.type || (key.startsWith(action.type) && key[action.type.length] === '@'); });\n        if (handlers.length === 0) {\n            var handlerNames = handlerKeys.map(function (name) { return \"  \\\"\" + name + \"\\\"\"; }).join(', \\n');\n            throw new Error(\"Action handler of type \\\"\" + action.type + \"\\\" does not exist.\\nIt is possible that you mispelled the action type.\\n\\nThe currently registered action types are:\\n\" + handlerNames + \"\\n\");\n        }\n        handlers.forEach(function (key) {\n            var handler = _this.handlers[key];\n            var stateKey = key.split('@')[1];\n            var state = stateKey ? get(_this.getState(), stateKey) : _this.getState();\n            var dispatched = false;\n            var newState = handler(\n            // current state\n            state, \n            // action dispatched\n            action, \n            // dispatch()\n            function (a) {\n                dispatched = true;\n                _this.dispatch(a);\n            });\n            if (typeof newState === 'undefined') {\n                return;\n            }\n            if (dispatched) {\n                throw new Error(\"\\\"\" + key + \"\\\": You may not return new state AND dispatch in the same\\u00A0handler.\\nConsider dividing your logic between a Procedure and a Reducer.\");\n            }\n            _this.bhs$.next(stateKey ? set(_this.getState(), stateKey, newState) : newState);\n        });\n    };\n    // redux-like api\n    Store.prototype.getState = function () {\n        return this.bhs$.getValue();\n    };\n    // redux-like api\n    Store.prototype.replaceHandlers = function (handlers) {\n        if (handlers === void 0) { handlers = {}; }\n        this.handlers = __assign({}, this.handlers, handlers);\n    };\n    return Store;\n}());\nexport { Store };\nexport function createStore(handlers, initialState) {\n    return new Store(handlers, initialState);\n}\n"],"names":["tryCatcher","tryCatchTarget","apply","this","arguments","e","errorObject_1","errorObject","flattenUnsubscriptionErrors","errors","reduce","errs","err","concat","UnsubscriptionError_1","UnsubscriptionError","getArrayIndex","head","obj","length","test","Error","parseInt","propToArray","prop","replace","split","__window","window","__self","self","WorkerGlobalScope","__global","global","_root","x","Array","isArray","fn","__extends","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","_super","call","map","i","join","name","stack","message","Subscription","unsubscribe","closed","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","_a","index","len","remove","isFunction_1","isFunction","trial","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","push","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","empty","next","value","error","complete","Symbol","root_1","root","exports","for","rxSubscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Observer_1","SafeSubscriber","rxSubscriber_1","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscription_1","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","_this","wrappedComplete","nextOrObserver","Subscriber_1","getSymbolObservable","$$observable","observable","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","toSubscriber_1","toSubscriber","_trySubscribe","forEach","PromiseCtor","Rx","config","Promise","resolve","reject","observable_1","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","ObjectUnsubscribedError_1","copy","slice","SubjectSubscription_1","asObservable","Observable_1","BehaviorSubject","_value","defineProperty","get","getValue","enumerable","configurable","Subject_1","setPropImmutableRec","clone","assign","undefined","item","__assign","t","s","n","Store","handlers","initialState","bhs$","state","dispatch","action","handlerKeys","keys","filter","key","type","startsWith","handlerNames","handler","stateKey","dispatched","newState","getState","a","set","replaceHandlers","recursive","stem","out","stateStem"],"mappings":"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"}